{"version":3,"file":"static/js/576.f24fddc5.chunk.js","mappings":"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","sources":["components/LoadingOverlay.js","components/Login.js","store/actions/auth.js"],"sourcesContent":["import React from 'react';\nimport { Spin } from 'antd';\n\nconst LoadingOverlay = ({ visible }) => {\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        display: visible ? 'flex' : 'none',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 9999,\n      }}\n    >\n      <Spin size=\"large\" />\n    </div>\n  );\n};\n\nexport default LoadingOverlay;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../store/actions/auth';\nimport { startTransition } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport LoadingOverlay from './LoadingOverlay';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleLogin = async (values) => {\n    try {\n      setLoading(true);\n      const { user, error: loginError } = await dispatch(login(values.username, values.password));\n      if (user) {\n        history.push('/');\n        window.location.reload();\n      } else {\n        setError(loginError);\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const registerPage = () => {\n    startTransition(() => {\n      history.push('/register');\n    });\n  };\n\n  return (\n    <Form\n      name=\"basic\"\n      initialValues={{ remember: true }}\n      onFinish={handleLogin}\n      style={{ width: '300px', margin: 'auto', marginTop: '100px' }}\n      className=\"max-w-md mt-16 p-6 bg-white rounded-md shadow-md\"\n    >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[{ required: true, message: 'Please input your username!' }]}\n        className=\"text-bermuda mb-4\"\n      >\n        <Input className=\"w-full\" />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: 'Please input your password!' }]}\n        className=\"mb-4\"\n      >\n        <Input.Password className=\"w-full\" />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"w-full\">\n          Log in\n        </Button> Or <a onClick={registerPage}>register now!</a>\n      </Form.Item>\n      <Form.Item>\n        {error && <p style={{ color: 'red' }}>{error}</p>}\n      </Form.Item>\n      <LoadingOverlay visible={loading} />\n    </Form>\n  );\n};\n\nexport default Login;\n","import axios from 'axios';\n\nexport const loginSuccess = (user) => ({\n  type: 'LOGIN_SUCCESS',\n  payload: user,\n});\n\nexport const registSuccess = (user) => ({\n  type: 'REGIST_SUCCESS',\n  payload: user,\n});\n\nexport const login = (username, password) => async (dispatch) => {\n  try {\n    const response = await axios.post('https://reqres.in/api/login', {\n      username,\n      password,\n    });\n    const { token } = response.data;\n    localStorage.setItem('token', token);\n    dispatch(loginSuccess(response.data));\n\n    return { user: response.data, error: null };\n  } catch (error) {\n    return { user: null, error: 'Invalid credentials. Please try again.' };\n  }\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n\n  return {\n    type: 'LOGOUT',\n  };\n};\n\n\nexport const register = (values) => async (dispatch) => {\n  try {\n    const response = await axios.post('https://reqres.in/api/register', values);\n    dispatch(registSuccess(response.data));\n\n    return { regist: response.data, error: null };\n  } catch (error) {\n    return { regist: null, error: 'Invalid credentials. Please try again.' };\n  }\n};\n\n"],"names":["_ref","visible","_jsx","style","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","children","Spin","size","Login","dispatch","useDispatch","history","useHistory","error","setError","useState","loading","setLoading","_jsxs","Form","name","initialValues","remember","onFinish","async","user","loginError","login","values","username","password","push","window","location","reload","console","margin","marginTop","className","Item","label","rules","required","message","Input","Password","Button","type","htmlType","onClick","registerPage","startTransition","color","LoadingOverlay","response","axios","post","token","data","localStorage","setItem","payload","register","regist"],"sourceRoot":""}