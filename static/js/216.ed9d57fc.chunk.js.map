{"version":3,"file":"static/js/216.ed9d57fc.chunk.js","mappings":"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","sources":["components/LoadingOverlay.js","components/Register.js","store/actions/auth.js"],"sourcesContent":["import React from 'react';\nimport { Spin } from 'antd';\n\nconst LoadingOverlay = ({ visible }) => {\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        display: visible ? 'flex' : 'none',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 9999,\n      }}\n    >\n      <Spin size=\"large\" />\n    </div>\n  );\n};\n\nexport default LoadingOverlay;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../store/actions/auth';\nimport { Form, Input, Button } from 'antd';\nimport LoadingOverlay from './LoadingOverlay';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleRegist = async (values) => {\n    try {\n      setLoading(true);\n      const { regist, error: registError } = await dispatch(register(values));\n      if (regist) {\n        history.push('/login');\n        window.location.reload();\n      } else {\n        setError(registError);\n      }\n    } catch (error) {\n      console.error('Register error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Form\n      name=\"registration-form\"\n      onFinish={handleRegist}\n      initialValues={{ remember: true }}\n      layout=\"vertical\"\n      style={{ width: '300px', margin: 'auto', marginTop: '100px' }}\n    >\n\n      <Form.Item\n        label=\"Email\"\n        name=\"email\"\n        rules={[\n          { required: true, message: 'Please input your email!' },\n          { type: 'email', message: 'Invalid email format!' },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[\n          { required: true, message: 'Please input your password!' },\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Confirm Password\"\n        name=\"confirmPassword\"\n        dependencies={['password']}\n        rules={[\n          { required: true, message: 'Please confirm your password!' },\n          ({ getFieldValue }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(new Error('Passwords do not match!'));\n            },\n          }),\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Register\n        </Button>\n      </Form.Item>\n      <LoadingOverlay visible={loading} />\n    </Form>\n  );\n};\n\nexport default Register;","import axios from 'axios';\n\nexport const loginSuccess = (user) => ({\n  type: 'LOGIN_SUCCESS',\n  payload: user,\n});\n\nexport const registSuccess = (user) => ({\n  type: 'REGIST_SUCCESS',\n  payload: user,\n});\n\nexport const login = (username, password) => async (dispatch) => {\n  try {\n    const response = await axios.post('https://reqres.in/api/login', {\n      username,\n      password,\n    });\n    const { token } = response.data;\n    localStorage.setItem('token', token);\n    dispatch(loginSuccess(response.data));\n\n    return { user: response.data, error: null };\n  } catch (error) {\n    return { user: null, error: 'Invalid credentials. Please try again.' };\n  }\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n\n  return {\n    type: 'LOGOUT',\n  };\n};\n\n\nexport const register = (values) => async (dispatch) => {\n  try {\n    const response = await axios.post('https://reqres.in/api/register', values);\n    dispatch(registSuccess(response.data));\n\n    return { regist: response.data, error: null };\n  } catch (error) {\n    return { regist: null, error: 'Invalid credentials. Please try again.' };\n  }\n};\n\n"],"names":["_ref","visible","_jsx","style","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","children","Spin","size","Register","dispatch","useDispatch","history","useHistory","error","setError","useState","loading","setLoading","_jsxs","Form","name","onFinish","async","regist","registError","register","values","push","window","location","reload","console","initialValues","remember","layout","margin","marginTop","Item","label","rules","required","message","type","Input","Password","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","Button","htmlType","LoadingOverlay","login","username","password","response","axios","post","token","data","localStorage","setItem","payload","user"],"sourceRoot":""}