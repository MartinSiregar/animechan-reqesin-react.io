{"version":3,"file":"static/js/748.f4c6824b.chunk.js","mappings":"gJAEA,MAeA,EAfsBA,IACpB,MAAMC,EAAMD,EAAS,gDAAAE,OAC+BC,mBAAmBH,IACnE,0CAEJ,OAAO,IAAII,SAAQC,MAAOC,EAASC,KACjC,IAEED,SADuBE,EAAAA,EAAMC,IAAIR,IAChBS,KACnB,CAAE,MAAOC,GACPJ,EAAOI,EACT,IACA,C,qGCVJ,MAAM,OAAEC,GAAWC,EAAAA,QAEbC,EAAU,CACd,CACEC,MAAO,QACPC,UAAW,QACXC,IAAK,SAEP,CACEF,MAAO,YACPC,UAAW,YACXC,IAAK,aAEP,CACEF,MAAO,QACPC,UAAW,QACXC,IAAK,UAgDT,EA5CsBC,KACpB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,KAE7CG,EAAAA,EAAAA,YAAU,KACRC,GAAkB,GACjB,IAEH,MAAMA,EAAmBpB,UACvB,IACE,MAAMqB,QAAkBC,EAAAA,EAAAA,GAAa3B,GACrCoB,EAAS,CAACM,GACZ,CAAE,MAAOf,GACPiB,QAAQjB,MAAM,wBAAyBA,EACzC,GAQIkB,EAAgBV,EAAMW,QACzBC,GACCA,EAAKC,MAAMC,cAAcC,SAASZ,EAAWW,gBAC7CF,EAAKI,UAAUF,cAAcC,SAASZ,EAAWW,gBACjDF,EAAKZ,MAAMc,cAAcC,SAASZ,EAAWW,iBAGjD,OACEG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAC1B,EAAM,CAAC2B,YAAY,8BAA8BC,SAfhCC,IACpBlB,EAAckB,GACdhB,EAAiBgB,EAAM,EAaqDC,MAAO,CAAEC,aAAc,WACjGL,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CACJC,WAAYhB,EACZf,QAASA,EACTgC,YAAY,EACZC,UAAQ,EACRC,OAASC,GAAWA,EAAO9B,UAEzB,C","sources":["api/getRandQuote.js","components/RandQuoteList.js"],"sourcesContent":["import axios from 'axios';\n\nconst getRandQuote = (animeName) => {\n  const url = animeName\n    ? `https://animechan.xyz/api/quotes/random?name=${encodeURIComponent(animeName)}`\n    : 'https://animechan.xyz/api/quotes/random';\n\n  return new Promise(async (resolve, reject) => {\n    try {\n      const response = await axios.get(url);\n      resolve(response.data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nexport default getRandQuote;\n","import React, { useState, useEffect } from 'react';\nimport { Table, Input } from 'antd';\nimport getRandQuote from '../api/getRandQuote';\n\nconst { Search } = Input;\n\nconst columns = [\n  {\n    title: 'Anime',\n    dataIndex: 'anime',\n    key: 'anime',\n  },\n  {\n    title: 'Character',\n    dataIndex: 'character',\n    key: 'character',\n  },\n  {\n    title: 'Quote',\n    dataIndex: 'quote',\n    key: 'quote',\n  },\n];\n\nconst RandQuoteList = () => {\n  const [quote, setQuote] = useState([]);\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    fetchRandomQuote();\n  }, []);\n\n  const fetchRandomQuote = async (animeName) => {\n    try {\n      const quoteData = await getRandQuote(animeName);\n      setQuote([quoteData]);\n    } catch (error) {\n      console.error('Error fetching quote:', error);\n    }\n  };\n\n  const handleSearch = (value) => {\n    setSearchText(value);\n    fetchRandomQuote(value); // Pass the anime name to the fetch function\n  };\n\n  const filteredQuote = quote.filter(\n    (item) =>\n      item.anime.toLowerCase().includes(searchText.toLowerCase()) ||\n      item.character.toLowerCase().includes(searchText.toLowerCase()) ||\n      item.quote.toLowerCase().includes(searchText.toLowerCase())\n  );\n\n  return (\n    <div>\n      <h1>Random Quotes</h1>\n      <Search placeholder=\"Search quotes by anime name\" onSearch={handleSearch} style={{ marginBottom: '20px' }} />\n      <Table\n        dataSource={filteredQuote}\n        columns={columns}\n        pagination={false}\n        bordered\n        rowKey={(record) => record.quote}\n      />\n    </div>\n  );\n};\n\nexport default RandQuoteList;\n"],"names":["animeName","url","concat","encodeURIComponent","Promise","async","resolve","reject","axios","get","data","error","Search","Input","columns","title","dataIndex","key","RandQuoteList","quote","setQuote","useState","searchText","setSearchText","useEffect","fetchRandomQuote","quoteData","getRandQuote","console","filteredQuote","filter","item","anime","toLowerCase","includes","character","_jsxs","children","_jsx","placeholder","onSearch","value","style","marginBottom","Table","dataSource","pagination","bordered","rowKey","record"],"sourceRoot":""}