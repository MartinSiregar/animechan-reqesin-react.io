"use strict";(self.webpackChunkanimechan_react=self.webpackChunkanimechan_react||[]).push([[748],{5700:(e,a,t)=>{t.d(a,{c:()=>c});var n=t(8372);const c=e=>{const a=e?"https://animechan.xyz/api/quotes/random?name=".concat(encodeURIComponent(e)):"https://animechan.xyz/api/quotes/random";return new Promise((async(e,t)=>{try{e((await n.c.get(a)).data)}catch(c){t(c)}}))}},2748:(e,a,t)=>{t.r(a),t.d(a,{default:()=>d});var n=t(9060),c=t(1600),o=t(2374),r=t(5700),s=t(2496);const{Search:i}=c.default,u=[{title:"Anime",dataIndex:"anime",key:"anime"},{title:"Character",dataIndex:"character",key:"character"},{title:"Quote",dataIndex:"quote",key:"quote"}],d=()=>{const[e,a]=(0,n.useState)([]),[t,c]=(0,n.useState)("");(0,n.useEffect)((()=>{d()}),[]);const d=async e=>{try{const t=await(0,r.c)(e);a([t])}catch(t){console.error("Error fetching quote:",t)}},h=e.filter((e=>e.anime.toLowerCase().includes(t.toLowerCase())||e.character.toLowerCase().includes(t.toLowerCase())||e.quote.toLowerCase().includes(t.toLowerCase())));return(0,s.jsxs)("div",{children:[(0,s.jsx)("h1",{children:"Random Quotes"}),(0,s.jsx)(i,{placeholder:"Search quotes by anime name",onSearch:e=>{c(e),d(e)},style:{marginBottom:"20px"}}),(0,s.jsx)(o.c,{dataSource:h,columns:u,pagination:!1,bordered:!0,rowKey:e=>e.quote})]})}}}]);
//# sourceMappingURL=748.f4c6824b.chunk.js.map